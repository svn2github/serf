# Serf Makefile
top_srcdir   = @abs_srcdir@
top_builddir = @abs_blddir@
srcdir       = @srcdir@
builddir     = $(shell pwd)
VPATH        = @srcdir@

SERF_MAJOR_VERSION=@SERF_MAJOR_VERSION@

SUBDIRS = @SERF_SUBDIRS@ base base/filters base/buckets

TARGET_LIB = lib@SERF_LIBNAME@.la

TARGETS = delete-lib $(TARGET_LIB)

PROGRAMS = test/serf_get
CLEAN_TARGETS = $(PROGRAMS)

include $(top_srcdir)/build/rules.mk

INCLUDES=-I$(top_srcdir)/include -I$(top_builddir)/include

delete-lib:
	@if test -f $(TARGET_LIB); then \
		objects="`find $(SUBDIRS) -name '*.@so_ext@' -a -newer $(TARGET_LIB) -print`" ; \
		if test -n "$$objects"; then \
			echo Found newer objects. Will relink $(TARGET_LIB). ; \
 			echo $(RM) $(TARGET_LIB) ; \
		  $(RM) $(TARGET_LIB) ; \
		fi; \
	fi

$(TARGET_LIB):
	@for i in $(SUBDIRS); do objects="$$objects $$i/*.@so_ext@"; done ; \
		tmpcmd="$(LINK) @lib_target@ @lib_target_libs@"; \
		echo $$tmpcmd; \
		$$tmpcmd && touch $(TARGET_LIB)

# Feel free to add real dependencies. build/rules.mk includes $(builddir)/.deps
$(builddir)/.deps:
	@touch $@

install:
	if [ ! -d $(includedir) ]; then \
		$(top_srcdir)/build/mkdir.sh $(includedir); \
	fi
	cp -p $(top_srcdir)/include/*.h $(includedir)

	if [ ! -d $(libdir) ]; then \
		$(top_srcdir)/build/mkdir.sh $(libdir); \
	fi
	$(LIBTOOL) --mode=install cp $(TARGET_LIB) $(libdir)

.PHONY: delete-lib
.NOTPARALLEL: delete-lib

